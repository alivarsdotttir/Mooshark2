// add courses
context.Courses.AddOrUpdate(new Course { Active = true, Name = "Forritun 1" } );
context.Courses.AddOrUpdate(new Course { Active = true, Name = "Gagnaskipan" });
context.Courses.AddOrUpdate(new Course { Active = false, Name = "Reiknirit" });
context.Courses.AddOrUpdate(new Course { Active = false, Name = "Vefforritun" });


// add projects
context.Projects.AddOrUpdate(new Project { Name = "Project 1" , Deadline = DateTime.Now, Graded = false, Visibility = true, CourseID = 1 } );
context.Projects.AddOrUpdate(new Project { Name = "Project 2" , Deadline = DateTime.Now, Graded = false, Visibility = true, CourseID = 1 } );
context.Projects.AddOrUpdate(new Project { Name = "Lab 1" , Deadline = DateTime.Now, Graded = true, Visibility = true, CourseID = 2 } );
context.Projects.AddOrUpdate(new Project { Name = "Lab 2" , Deadline = DateTime.Now, Graded = false, Visibility = true, CourseID = 2 } );
context.Projects.AddOrUpdate(new Project { Name = "Project 1" , Deadline = DateTime.Now, Graded = true, Visibility = true, CourseID = 3 } );
context.Projects.AddOrUpdate(new Project { Name = "Project 2" , Deadline = DateTime.Now, Graded = false, Visibility = true, CourseID = 3 } );
context.Projects.AddOrUpdate(new Project { Name = "Project 1" , Deadline = DateTime.Now, Graded = false, Visibility = true, CourseID = 4 } );
context.Projects.AddOrUpdate(new Project { Name = "Lab 1" , Deadline = DateTime.Now, Graded = false, Visibility = true, CourseID = 4 } );


/*
// add users:
context.Users.AddOrUpdate(new ApplicationUser
            {
                UserName = "admin",
                Email = "admin@admin.is",
                PasswordHash = "Admin.123",
                EmailConfirmed = false,
                PhoneNumberConfirmed = false,
                TwoFactorEnabled = false,
                LockoutEnabled = false,
                AccessFailedCount = 0,
                FullName = "Admin Adminsson",
                SSN = "0101660169"
            });

context.Users.AddOrUpdate(new ApplicationUser
            {
                UserName = "tinnats15",
                Email = "tinnats15@ru.is",
                PasswordHash = "Tinna.123",
                EmailConfirmed = false,
                PhoneNumberConfirmed = false,
                TwoFactorEnabled = false,
                LockoutEnabled = false,
                AccessFailedCount = 0,
                FullName = "Tinna Þuríður Sigurðardóttir",
                SSN = "0106902859"
            });

var UserManager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(context));
            UserManager.AddToRole("119ca98f-6a65-4262-b761-73b86cd58276", "Student"); 		// the ID is automatically generated, update-database first, 
												//then find the id, insert it here and update again
												// role can be Student, Admin, Teacher

context.Users.AddOrUpdate(new ApplicationUser
            {
                UserName = "juliao15",
                Email = "juliao15@ru.is",
                PasswordHash = "Julia.123",
                EmailConfirmed = false,
                PhoneNumberConfirmed = false,
                TwoFactorEnabled = false,
                LockoutEnabled = false,
                AccessFailedCount = 0,
                FullName = "Júlía Oddsdóttir",
                SSN = "1108962769"
            });

context.Users.AddOrUpdate(new ApplicationUser
            {
                UserName = "dabs",
                Email = "dabs@ru.is",
                PasswordHash = "Dabs.123",
                EmailConfirmed = false,
                PhoneNumberConfirmed = false,
                TwoFactorEnabled = false,
                LockoutEnabled = false,
                AccessFailedCount = 0,
                FullName = "Daníel Brandur Sigurgeirsson",
                SSN = "1003732579"
            });
*/

/*
*---------------------------------------------------
*------------------Join tables-----------------------
*----------------------------------------------------
*/


// add course-student connections
context.CourseStudents.AddOrUpdate( new CourseStudent { UserID ="119ca98f-6a65-4262-b761-73b86cd58276" , CourseID = 1 } );	// same goes for other users, find their id + courseID


// add course-teacher connections
context.CourseTeachers.AddOrUpdate( new CourseTeacher { UserID = , CourseID = } ); 	//same same