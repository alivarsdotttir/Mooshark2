@model Mooshark2.Models.ViewModels.AdminViewModels.AdminCourseViewModel

@{
    ViewBag.Title = "CreateCourse";
}

<h2>CreateCourse</h2>

<script src="jquery-1.12.2.min.js"></script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create Course</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Course.Name, htmlAttributes : new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Course.Name, "", new { @class = "text-danger" })
            </div>
        <!--</div>-->

       <!-- <div class="form-group">-->
            @*<div class="col-md-10" >
                <div id="duplicater" class="dropdown">*@
                    @Html.LabelFor(model => model.TeacherList, new { @class = "col-md-2 control-label" })
            <div class="col-md-10" class="dropdown">
                @*@Html.DropDownList("Teacher", (IEnumerable<SelectListItem>)ViewBag.Teachers, "- Select a Teacher -", new { @class = "btn btn-default dropdown-toggle" })*@
            </div>
            @Html.DropDownListFor(m => m.TeacherList.Id, (IEnumerable<SelectListItem>)ViewBag.Teachers, "- Select a Teacher -", new { @class = "btn btn-default dropdown-toggle" })

                @*<button id ="button" class="btn btn-primary" data-toggle="button" onclick="duplicate()">
                    Add another
                </button>*@
            @*</div>*@
        </div>

   @*    <script type="text/javascript">

            document.getElementById('button').onclick = duplicate;


            var i = 0;
            var original = document.getElementById('duplicater');

            function duplicate() {
                var clone = original.cloneNode(true); // "deep" clone
                clone.id = "duplicetor" + ++i; // there can only be one element with an ID
                original.parentNode.appendChild(clone);
            }

        </script>

            <div class="form-group">
                <a class="btn btn-primary AdminButtons" data-toggle="modal" data-target=".bootstrapmodal"><span></span>Select students</a>

                <div class="modal fade bootstrapmodal">
                    <div class="modal-dialog">

                        <div class="modal-content">

                            <div class="modal-header">
                                Select students
                            </div>
                                <div class="modal-body">

                                    <table>
                                        <thead>
                                        <tr>
                                            <th></th>
                                            <th>Name</th>
                                            <th>Email</th>
                                            <th>SSN</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        @foreach(var i in ViewBag.Students) {
                                            <tr>
                                                @*<td><input type="checkbox" name="StudentList" value= @i.FullName></td>
                                                <td>@Html.CheckBox("StudentList", new {Value = i, @class="checkbox"})</td>
                                                <td>@i.FullName</td>
                                                <td>@i.Email</td>
                                                <td>@i.SSN</td>
                                            </tr>
                                        }
                                        </tbody>
                                    </table>
                                </div>
                                <div class="modal-footer">
                                    @Html.ActionLink("Ok", "CreateCourse", new { @class = "btn btn-success" });
                                    @Html.ActionLink("Cancel", "CreateCourse", new { @class = "btn btn-default" });
                                </div>
                        </div>
                    </div>
                </div>
    </div>

*@

 

@*<div class="form-group">
            @Html.LabelFor(m => m.TeacherList, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <select>

                    MODELIÐ ER ÞAÐ SEM VIÐ ERUM AÐ FARA SETJA INNÍ EKKI DATABASEINN :-) - unnur
                    @foreach(var teacher in Model.TeacherList) {
                        <option value="name">i.FullName</option>
                    }
                </select>

                @* @Html.DropDownList("TeacherList", (IEnumerable<SelectListItem>)ViewBag.Teachers, "Select ...");

            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Course.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Course.Active)
                    @Html.ValidationMessageFor(model => model.Course.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
